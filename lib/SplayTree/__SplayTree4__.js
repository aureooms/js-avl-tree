"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = __SplayTree4__;
function __SplayTree4__(diff) {

	var node = function node(v) {
		this.l = this.r = null;
		this.v = v;
	};

	var item = function item(d, pt) {
		this.d = d;
		this.pt = pt;
	};

	var splay = function splay(el, v) {

		var l, r, t, y, x, d;
		l = r = x = new node();
		t = el;
		while (true) {
			d = diff(v, t.v);
			if (d < 0) {
				if (!t.l) break;
				if (diff(v, t.l.v) < 0) {
					y = t.l;
					t.l = y.r;
					y.r = t;
					t = y;
					if (!t.l) break;
				}
				r.l = t;
				r = t;
				t = t.l;
			} else if (d > 0) {
				if (!t.r) break;
				if (diff(v, t.r.v) > 0) {
					y = t.r;
					t.r = y.l;
					y.l = t;
					t = y;
					if (!t.r) break;
				}
				l.r = t;
				l = t;
				t = t.r;
			} else break;
		}
		l.r = t.l;
		r.l = t.r;
		t.l = x.r;
		t.r = x.l;

		return new item(d, t);
	};

	var remove = function remove(el, v) {
		var i = splay(el, v);
		var pt = i.pt;
		if (i.d !== 0) return pt;

		if (pt.l === null) return pt.r;else if (pt.r === null) return pt.l;else {
			pt.l = splay(pt.l, v).pt;
			pt.l.r = pt.r;
			return pt.l;
		}
	};

	var in_order_traversal = function in_order_traversal(pt, fn) {
		if (pt.l !== null) in_order_traversal(pt.l, fn);
		fn(pt.v);
		if (pt.r !== null) in_order_traversal(pt.r, fn);
	};

	var splay_tree = function splay_tree() {
		this.pt = null;
	};

	splay_tree.prototype.insert = function (v) {
		var n = new node(v);
		if (this.pt !== null) {
			var i = splay(this.pt, v);
			this.pt = i.pt;

			if (i.d <= 0) {
				n.l = this.pt.l;
				n.r = this.pt;
				this.pt.l = null;
			} else {
				n.r = this.pt.r;
				n.l = this.pt;
				this.pt.r = null;
			}
		}
		this.pt = n;
	};

	splay_tree.prototype.find = function (v) {
		if (this.pt === null) return [false, null];
		var i = splay(this.pt, v);
		this.pt = i.pt;
		return [i.d === 0, this.pt.v];
	};

	splay_tree.prototype.remove = function (v) {
		if (this.pt !== null) this.pt = remove(this.pt, v);
	};

	splay_tree.prototype.in_order_traversal = function (fn) {
		if (this.pt !== null) in_order_traversal(this.pt, fn);
	};

	return splay_tree;
}
//# sourceMappingURL=data:application/json;base64,